git ini
git status
git add .  "add all unstaged & untracked"
git commit -a -m "msg"  "-a is add unstaged only or -am (short-hand)"
git commit --amend
git log --oneline
git config -l --global/system/local
git branch -d branch-name "-d is delete; -m is rename"
git switch -c branch-name  "-c is create"
git switch master, git merge branch-name
git diff  "compare with unstaged"
git diff HEAD  "compare with last commit, unstaged & untracked"
git diff --staged  "compare with whatever files u put in staged & untracked"
git diff branch1..branch2, git diff 329fwwb..x0wk327  "compare branch & commit"
git diff tag1 tag2  "compare between tags"
git stash <save>
git stash list
git stash apply <stash@{2}>
git stash pop
git stash drop stash@{2}
git stash clear
git checkout HEAD~1 || git switch -   "go back one commit"
git checkout HEAD <filename> || git checkout -- <filename> || git restore filename  "discard changes to last commit"
git restore --source HEAD~1 filename  "restore filename content using 2 commits before"
git reset <commit-hash>  "erase commit back to commit-hash, but changes remain, lost chances to merge"
git reset --hard <commit-hash> || <HEAD~1>  "erase commit & changes back to commit-hash"
git revert <commit-hash>  "make a new commit by undoing all chances back to the commit-hash instead of erase"
git rebase master  "normally on branch, then pull master commit as base, and put new branch commit on top of commit history"
git rebase i HEAD~9  "on branch, clean history by amend,remove,combine commits"
git tag
git tag -l "pattern"  "search pattern like *beta*"
git tag <tagname>  "add a lightweight tag to the current HEAD"
git tag <tagname> <commit>  "add the tag to specified commit"
git tag -a <tagname>  "add annotation tag"
git show <tagname>  "show info of a tag or commit"

git hash-object & git cat-file  "these are cmds to understand how git work"
git reflog show HEAD| HEAD@{2}| main@{one.week.ago}| branch@{yesterday}
git reset --hard <commit-hash>  "if u accidentally remove something, use 'git reflog' to retrieve back commit-hash not appearing in 'git log', then reset back. all hash will not be removed"
reflog also can retrieve hash after rebase
